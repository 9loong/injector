Injector Change Log
===================

0.8.0
-----

- Binding annotations are removed. Use :func:`~injector.Key` to create unique types instead.

0.7.8
-----

- Exception is raised when :class:`~injector.Injector` can't install itself into a class instance due to __slots__ presence
- Some of exception messages are now more detailed to make debugging easier when injection fails
- You can inject functions now - :class:`~injector.Injector` provides a wrapper that takes care of injecting dependencies into the original function

0.7.7
-----

- Made :class:`~injector.AssistedBuilder` behave more explicitly: it can build either innstance of a concrete class (``AssistedBuilder(cls=Class)``) or it will follow Injector bindings (if exist) and construct instance of a class pointed by an interface (``AssistedBuilder(interface=Interface)``). ``AssistedBuilder(X)`` behaviour remains the same, it's equivalent to ``AssistedBuilder(interface=X)``

0.7.6
-----

- Auto-convert README.md to RST for PyPi.

0.7.5
-----

- Added a ChangeLog!
- Added support for using Python3 annotations as binding types.
